{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tim Wang\\\\Desktop\\\\full_stack_final_project\\\\client\\\\src\\\\Components\\\\RecipeGrid.jsx\";\nimport React, { useState } from \"react\";\nimport RecipeCard from \"./RecipeCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"./../App.css\";\nimport RandomRecipes from \"./../randomRecipes.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeGrid(recipes) {\n  console.log(\"Recipes in the RecipeGrid:\");\n  console.log(recipes);\n  console.log(RandomRecipes.recipes);\n  console.log(recipes.recipes);\n  if (recipes.recipes) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        md: \"4\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: recipes.recipes.map(r => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n              sourceUrl: r.sourceUrl,\n              image: r.image,\n              dishType: r.dishTypes[0] && r.dishTypes[0].toUpperCase(),\n              title: r.title,\n              readyInMinutes: r.readyInMinutes,\n              aggregateLikes: r.aggregateLikes,\n              analyzedInstructions: r.analyzedInstructions[0].steps,\n              extendedIngredients: r.extendedIngredients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = RecipeGrid;\nexport default RecipeGrid;\nvar _c;\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"names":["React","useState","RecipeCard","Container","Col","Row","RandomRecipes","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeGrid","recipes","console","log","fluid","children","md","map","r","sourceUrl","image","dishType","dishTypes","toUpperCase","title","readyInMinutes","aggregateLikes","analyzedInstructions","steps","extendedIngredients","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tim Wang/Desktop/full_stack_final_project/client/src/Components/RecipeGrid.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport RecipeCard from \"./RecipeCard\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"./../App.css\";\r\nimport RandomRecipes from \"./../randomRecipes.json\";\r\n\r\nfunction RecipeGrid(recipes) {\r\n  console.log(\"Recipes in the RecipeGrid:\");\r\n  console.log(recipes);\r\n  console.log(RandomRecipes.recipes);\r\n  console.log(recipes.recipes);\r\n  if (recipes.recipes) {\r\n    return (\r\n      <Container fluid=\"md\">\r\n        <Row md=\"4\">\r\n          <>\r\n            {recipes.recipes.map((r) => (\r\n              <Col>\r\n                <RecipeCard\r\n                  sourceUrl={r.sourceUrl}\r\n                  image={r.image}\r\n                  dishType={r.dishTypes[0] && r.dishTypes[0].toUpperCase()}\r\n                  title={r.title}\r\n                  readyInMinutes={r.readyInMinutes}\r\n                  aggregateLikes={r.aggregateLikes}\r\n                  analyzedInstructions={r.analyzedInstructions[0].steps}\r\n                  extendedIngredients={r.extendedIngredients}\r\n                ></RecipeCard>\r\n              </Col>\r\n            ))}\r\n          </>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default RecipeGrid;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,cAAc;AACrB,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,UAAUA,CAACC,OAAO,EAAE;EAC3BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EACzCD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpBC,OAAO,CAACC,GAAG,CAACR,aAAa,CAACM,OAAO,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAACA,OAAO,CAAC;EAC5B,IAAIA,OAAO,CAACA,OAAO,EAAE;IACnB,oBACEJ,OAAA,CAACL,SAAS;MAACY,KAAK,EAAC,IAAI;MAAAC,QAAA,eACnBR,OAAA,CAACH,GAAG;QAACY,EAAE,EAAC,GAAG;QAAAD,QAAA,eACTR,OAAA,CAAAE,SAAA;UAAAM,QAAA,EACGJ,OAAO,CAACA,OAAO,CAACM,GAAG,CAAEC,CAAC,iBACrBX,OAAA,CAACJ,GAAG;YAAAY,QAAA,eACFR,OAAA,CAACN,UAAU;cACTkB,SAAS,EAAED,CAAC,CAACC,SAAU;cACvBC,KAAK,EAAEF,CAAC,CAACE,KAAM;cACfC,QAAQ,EAAEH,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,IAAIJ,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW,EAAG;cACzDC,KAAK,EAAEN,CAAC,CAACM,KAAM;cACfC,cAAc,EAAEP,CAAC,CAACO,cAAe;cACjCC,cAAc,EAAER,CAAC,CAACQ,cAAe;cACjCC,oBAAoB,EAAET,CAAC,CAACS,oBAAoB,CAAC,CAAC,CAAC,CAACC,KAAM;cACtDC,mBAAmB,EAAEX,CAAC,CAACW;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAC/B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEjB;QAAC;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAEhB;AACF;AAACC,EAAA,GA7BQxB,UAAU;AA8BnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}