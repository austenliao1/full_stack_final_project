{"ast":null,"code":"var _jsxFileName = \"/Users/kirbyausten/Desktop/Austen's Stuff/College/CS198/proj/full_stack_final_project/client/src/Components/RecipeGrid.jsx\";\nimport React from 'react';\nimport RecipeCard from './RecipeCard';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nfunction RecipeGrid(_ref) {\n  let {\n    recipeIds\n  } = _ref;\n  let recipes = axios.get('https://api.spoonacular.com/recipes/informationBulk', {\n    params: {\n      apiKey: apiKey,\n      ids: recipeIds\n    }\n  }).then(body => res.json(body.data));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: recipes.map(r => {\n          const ingredients = r.extendedIngredients.map(i => i.original);\n          return /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n              sourceUrl: r.sourceUrl,\n              image: r.image,\n              dishType: r.dishTypes[0] && r.dishTypes[0].toUpperCase(),\n              title: r.title,\n              readyInMinutes: r.readyInMinutes,\n              aggregateLikes: r.aggregateLikes,\n              ingredients: ingredients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, r.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = RecipeGrid;\nexport default RecipeGrid;\nvar _c;\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"names":["React","RecipeCard","Container","Col","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","axios","require","RecipeGrid","_ref","recipeIds","recipes","get","params","apiKey","ids","then","body","res","json","data","fluid","children","map","r","ingredients","extendedIngredients","i","original","sourceUrl","image","dishType","dishTypes","toUpperCase","title","readyInMinutes","aggregateLikes","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/kirbyausten/Desktop/Austen's Stuff/College/CS198/proj/full_stack_final_project/client/src/Components/RecipeGrid.jsx"],"sourcesContent":["import React from 'react';\nimport RecipeCard from './RecipeCard';\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './../App.css';\n\nconst axios = require('axios');\n\nfunction RecipeGrid({ recipeIds }) {\n  let recipes = axios.get('https://api.spoonacular.com/recipes/informationBulk', {\n    params: {\n        apiKey: apiKey,\n        ids: recipeIds\n    }\n}).then(body => res.json(body.data))\n\n  return (\n    <Container fluid=\"md\">\n      <Row>\n        <>\n          {recipes.map((r) => {\n            const ingredients = r.extendedIngredients.map((i) => i.original);\n\n            return (\n              <Col key={r.id}>\n                <RecipeCard\n                  sourceUrl={r.sourceUrl}\n                  image={r.image}\n                  dishType={r.dishTypes[0] && r.dishTypes[0].toUpperCase()}\n                  title={r.title}\n                  readyInMinutes={r.readyInMinutes}\n                  aggregateLikes={r.aggregateLikes}\n                  ingredients={ingredients}\n                />\n              </Col>\n            );\n          })}\n        </>\n      </Row>\n    </Container>\n  );\n}\n\nexport default RecipeGrid;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,SAASC,UAAUA,CAAAC,IAAA,EAAgB;EAAA,IAAf;IAAEC;EAAU,CAAC,GAAAD,IAAA;EAC/B,IAAIE,OAAO,GAAGL,KAAK,CAACM,GAAG,CAAC,qDAAqD,EAAE;IAC7EC,MAAM,EAAE;MACJC,MAAM,EAAEA,MAAM;MACdC,GAAG,EAAEL;IACT;EACJ,CAAC,CAAC,CAACM,IAAI,CAACC,IAAI,IAAIC,GAAG,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAAC;EAElC,oBACEjB,OAAA,CAACJ,SAAS;IAACsB,KAAK,EAAC,IAAI;IAAAC,QAAA,eACnBnB,OAAA,CAACF,GAAG;MAAAqB,QAAA,eACFnB,OAAA,CAAAE,SAAA;QAAAiB,QAAA,EACGX,OAAO,CAACY,GAAG,CAAEC,CAAC,IAAK;UAClB,MAAMC,WAAW,GAAGD,CAAC,CAACE,mBAAmB,CAACH,GAAG,CAAEI,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC;UAEhE,oBACEzB,OAAA,CAACH,GAAG;YAAAsB,QAAA,eACFnB,OAAA,CAACL,UAAU;cACT+B,SAAS,EAAEL,CAAC,CAACK,SAAU;cACvBC,KAAK,EAAEN,CAAC,CAACM,KAAM;cACfC,QAAQ,EAAEP,CAAC,CAACQ,SAAS,CAAC,CAAC,CAAC,IAAIR,CAAC,CAACQ,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW,EAAG;cACzDC,KAAK,EAAEV,CAAC,CAACU,KAAM;cACfC,cAAc,EAAEX,CAAC,CAACW,cAAe;cACjCC,cAAc,EAAEZ,CAAC,CAACY,cAAe;cACjCX,WAAW,EAAEA;YAAY;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACzB,GATMhB,CAAC,CAACiB,EAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAUR;QAEV,CAAC;MAAC;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAEhB;AAACE,EAAA,GAjCQlC,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}